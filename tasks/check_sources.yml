# Copyright 2019-2024 Chris Croome
#
# This file is part of the Webarchitects apt Ansible role.
#
# The Webarchitects apt Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects apt Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects apt Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Apt sources checks
  block:

    - name: Check apt source variables
      ansible.builtin.assert:
        that:
          - apt_source.types is defined
          - apt_source.uris is defined
          - apt_source.suites is defined
          - apt_source.components is defined
          - apt_source.signed_by is defined
        quiet: "{% if ansible_check_mode | bool or ansible_verbosity >= 1 %}false{% else %}true{% endif %}"
      loop: "{{ apt_sources }}"
      loop_control:
        loop_var: apt_source
      when:
        - apt_sources is defined
        - apt_sources != []

    - name: Check apt sources signed_by keyrings
      ansible.builtin.stat:
        path: "{{ apt_key }}"
        get_mime: true
      loop: "{{ apt_sources | community.general.json_query('[].signed_by') | ansible.builtin.unique }}"
      loop_control:
        loop_var: apt_key
        label: "{{ apt_key | ansible.builtin.basename }}"
      register: apt_signed_by_paths
      when:
        - apt_key is ansible.builtin.regex('^[/]')
        - apt_sources | community.general.json_query('[].signed_by') | ansible.builtin.unique != []

    - name: Print apt_signed_by_paths.results
      ansible.builtin.debug:
        var: apt_signed_by_paths.results
        verbosity: "{% if ansible_check_mode | bool %}1{% else %}2{% endif %}"
      when: apt_signed_by_paths.results is defined

    - name: All apt keyrings files need to exist and be of the MIME type application/pgp-keys
      ansible.builtin.assert:
        that:
          - apt_signed_by_path.stat.exists | bool
          - apt_signed_by_path.stat.mimetype == "application/pgp-keys"
        quiet: "{% if ansible_check_mode | bool or ansible_verbosity >= 1 %}false{% else %}true{% endif %}"
        fail_msg: "Apt signed_by keyring files need to exist."
      loop: "{{ apt_signed_by_paths.results }}"
      loop_control:
        loop_var: apt_signed_by_path
        label: "{{ apt_signed_by_path.invocation.module_args.path | ansible.builtin.basename }}"
      when: apt_signed_by_paths.results is defined

  tags:
    - apt
...
