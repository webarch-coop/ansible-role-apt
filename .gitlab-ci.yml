# Copyright 2019-2024 Chris Croome
#
# This file is part of the Webarchitects apt Ansible role.
#
# The Webarchitects apt Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects apt Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects apt Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
variables:
  ANSIBLE_DIFF_ALWAYS: "1"
  ANSIBLE_DISPLAY_SKIPPED_HOSTS: "0"
  ANSIBLE_FORCE_COLOR: "1"
  APT_ANSIBLE: "8.7.0"
  APT_ANSIBLE_CORE: "2.15.8"
  APT_JC: "1.25.2"
  APT_JMESPATH: "1.0.1"
  # Newer versions of Molecule can't be installed on Bullseye as they require Python >= 3.10
  APT_MOLECULE: "6.0.3"
  DEBIAN_FRONTEND: noninteractive
  GIT_STRATEGY: none
  MOLECULE_VERBOSITY: "1"
  PIPX_BIN_DIR: "/usr/local/bin"
  PIPX_HOME: "/opt/pipx"
  PY_COLORS: "1"
stages:
  # - trixie
  # - bookworm
  # - bullseye
  # - jammy
  - noble
# trixie:
#   image: debian:trixie
#   stage: trixie
#   before_script:
#     - echo 'export DEBIAN_FRONTEND="${DEBIAN_FRONTEND}"' >> ~/.bashrc
#     - echo 'export PIPX_BIN_DIR="${PIPX_BIN_DIR}"' >> ~/.bashrc
#     - echo 'export PIPX_HOME="${PIPX_HOME}"' >> ~/.bashrc
#     - source ~/.profile
#     - whoami
#     - pwd
#     - chmod 700 $(pwd)
#     - DEBIAN_FRONTEND=noninteractive apt-get update -qq
#     - DEBIAN_FRONTEND=noninteractive apt-get dist-upgrade -qqy
#     - ln -fs /usr/share/zoneinfo/Etc/UTC /etc/localtime
#     # Debian Trixie doesn't currently contain the ansible package
#     - DEBIAN_FRONTEND=noninteractive apt-get install -qqy ansible-core git pipx python3-apt python3-debian python3-pip python3-venv
#     - python3 --version
#     - pipx --version
#     - pipx install --include-deps molecule==${APT_MOLECULE}
#     - pipx inject --include-deps --include-apps molecule ansible==${APT_ANSIBLE} ansible-core==${APT_ANSIBLE_CORE} jc==${APT_JC} jmespath==${APT_JMESPATH}
#     - ls -lah /usr/local/bin
#     - which ansible-galaxy
#     - ansible-galaxy --version
#     - mkdir -p builds/${CI_PROJECT_ROOT_NAMESPACE}
#     - cd builds/${CI_PROJECT_ROOT_NAMESPACE}
#     - git clone ${CI_PROJECT_URL}.git
#     - chmod 700 ${CI_PROJECT_NAME}
#     - cd ${CI_PROJECT_NAME}
#   script:
#     - molecule test
# bookworm:
#   image: debian:bookworm
#   stage: bookworm
#   before_script:
#     - echo 'export DEBIAN_FRONTEND="${DEBIAN_FRONTEND}"' >> ~/.bashrc
#     - echo 'export PIPX_BIN_DIR="${PIPX_BIN_DIR}"' >> ~/.bashrc
#     - echo 'export PIPX_HOME="${PIPX_HOME}"' >> ~/.bashrc
#     - source ~/.profile
#     - whoami
#     - pwd
#     - chmod 700 $(pwd)
#     - DEBIAN_FRONTEND=noninteractive apt-get update -qq
#     - DEBIAN_FRONTEND=noninteractive apt-get dist-upgrade -qqy
#     - ln -fs /usr/share/zoneinfo/Etc/UTC /etc/localtime
#     - DEBIAN_FRONTEND=noninteractive apt-get install -qqy ansible git pipx python3-apt python3-debian python3-pip python3-venv
#     - python3 --version
#     - pipx --version
#     - pipx install --include-deps molecule==${APT_MOLECULE}
#     - pipx inject --include-deps --include-apps molecule ansible==${APT_ANSIBLE} ansible-core==${APT_ANSIBLE_CORE} jc==${APT_JC} jmespath==${APT_JMESPATH}
#     - ls -lah /usr/local/bin
#     - which ansible-galaxy
#     - ansible-galaxy --version
#     - mkdir -p builds/${CI_PROJECT_ROOT_NAMESPACE}
#     - cd builds/${CI_PROJECT_ROOT_NAMESPACE}
#     - git clone ${CI_PROJECT_URL}.git
#     - chmod 700 ${CI_PROJECT_NAME}
#     - cd ${CI_PROJECT_NAME}
#   script:
#     - molecule test
# bullseye:
#   image: debian:bullseye-backports
#   stage: bullseye
#   before_script:
#     - echo 'export DEBIAN_FRONTEND="${DEBIAN_FRONTEND}"' >> ~/.bashrc
#     - echo 'export PIPX_BIN_DIR="${PIPX_BIN_DIR}"' >> ~/.bashrc
#     - echo 'export PIPX_HOME="${PIPX_HOME}"' >> ~/.bashrc
#     - source ~/.profile
#     - whoami
#     - pwd
#     - chmod 700 $(pwd)
#     - DEBIAN_FRONTEND=noninteractive apt-get update -qq
#     - DEBIAN_FRONTEND=noninteractive apt-get dist-upgrade -qqy
#     - ln -fs /usr/share/zoneinfo/Etc/UTC /etc/localtime
#     - DEBIAN_FRONTEND=noninteractive apt-get install -qqy ansible git pipx python3-apt python3-debian python3-pip python3-venv
#     - python3 --version
#     - pipx --version
#     - pipx install --include-deps molecule==${APT_MOLECULE}
#     - pipx inject --include-deps --include-apps molecule ansible==${APT_ANSIBLE} ansible-core==${APT_ANSIBLE_CORE} jc==${APT_JC} jmespath==${APT_JMESPATH}
#     - ls -lah /usr/local/bin
#     - which ansible-galaxy
#     - ansible-galaxy --version
#     - mkdir -p builds/${CI_PROJECT_ROOT_NAMESPACE}
#     - cd builds/${CI_PROJECT_ROOT_NAMESPACE}
#     - git clone ${CI_PROJECT_URL}.git
#     - chmod 700 ${CI_PROJECT_NAME}
#     - cd ${CI_PROJECT_NAME}
#   script:
#     - molecule test
# jammy:
#   image: ubuntu:jammy
#   stage: jammy
#   before_script:
#     - echo 'export DEBIAN_FRONTEND="${DEBIAN_FRONTEND}"' >> ~/.bashrc
#     - echo 'export PIPX_BIN_DIR="${PIPX_BIN_DIR}"' >> ~/.bashrc
#     - echo 'export PIPX_HOME="${PIPX_HOME}"' >> ~/.bashrc
#     - source ~/.profile
#     - whoami
#     - pwd
#     - chmod 700 $(pwd)
#     - DEBIAN_FRONTEND=noninteractive apt-get update -qq
#     - DEBIAN_FRONTEND=noninteractive apt-get dist-upgrade -qqy
#     - ln -fs /usr/share/zoneinfo/Etc/UTC /etc/localtime
#     - DEBIAN_FRONTEND=noninteractive apt-get install -qqy ansible git pipx python3-apt python3-debian python3-pip python3-venv
#     - python3 --version
#     - pipx --version
#     - pipx install --include-deps molecule==${APT_MOLECULE}
#     - pipx inject --include-deps --include-apps molecule ansible==${APT_ANSIBLE} ansible-core==${APT_ANSIBLE_CORE} jc==${APT_JC} jmespath==${APT_JMESPATH}
#     - ls -lah /usr/local/bin
#     - which ansible-galaxy
#     - ansible-galaxy --version
#     - mkdir -p builds/${CI_PROJECT_ROOT_NAMESPACE}
#     - cd builds/${CI_PROJECT_ROOT_NAMESPACE}
#     - git clone ${CI_PROJECT_URL}.git
#     - chmod 700 ${CI_PROJECT_NAME}
#     - cd ${CI_PROJECT_NAME}
#   script:
#     - molecule test
noble:
  image: ubuntu:noble
  stage: noble
  before_script:
    - echo 'export DEBIAN_FRONTEND="${DEBIAN_FRONTEND}"' >> ~/.bashrc
    - echo 'export PIPX_BIN_DIR="${PIPX_BIN_DIR}"' >> ~/.bashrc
    - echo 'export PIPX_HOME="${PIPX_HOME}"' >> ~/.bashrc
    - source ~/.profile
    - whoami
    - pwd
    - chmod 700 $(pwd)
    - DEBIAN_FRONTEND=noninteractive apt-get update -qq
    - DEBIAN_FRONTEND=noninteractive apt-get dist-upgrade -qqy
    - ln -fs /usr/share/zoneinfo/Etc/UTC /etc/localtime
    - DEBIAN_FRONTEND=noninteractive apt-get install -qqy ansible git pipx python3-apt python3-debian python3-pip python3-venv
    - python3 --version
    - pipx --version
    - pipx install --include-deps molecule==${APT_MOLECULE}
    - pipx inject --include-deps --include-apps molecule ansible==${APT_ANSIBLE} ansible-core==${APT_ANSIBLE_CORE} jc==${APT_JC} jmespath==${APT_JMESPATH}
    - ls -lah /usr/local/bin
    - which ansible-galaxy
    - ansible-galaxy --version
    - mkdir -p builds/${CI_PROJECT_ROOT_NAMESPACE}
    - cd builds/${CI_PROJECT_ROOT_NAMESPACE}
    - git clone ${CI_PROJECT_URL}.git
    - chmod 700 ${CI_PROJECT_NAME}
    - cd ${CI_PROJECT_NAME}
  script:
    - molecule test
...
