# Copyright 2019-2025 Chris Croome
#
# This file is part of the Webarchitects apt Ansible role.
#
# The Webarchitects apt Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects apt Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects apt Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Skip the tasks in this role as apt is false
  ansible.builtin.debug:
    msg: "The apt variable need to be true for the tasks in this role to run."
  when: not apt | bool
  tags:
    - apt

- name: Configure apt sources list for Debian and Ubuntu
  block:

    - name: Include verify variables tasks
      ansible.builtin.include_tasks: verify.yml
      when:
        - apt_verify | bool
        - ansible_version.full is version('2.11', '>=')

    - name: Include local facts tasks
      ansible.builtin.include_tasks: local_facts.yml
      when:
        - apt_local_facts is defined
        - apt_local_facts | bool
        - apt_local_facts_files is defined
        - apt_local_facts_files != []
      tags:
        - apt_local_facts

    - name: Include checks
      ansible.builtin.include_tasks: checks.yml

    - name: Include Freexian tasks for supported distros
      ansible.builtin.include_tasks: freexian.yml
      when: apt_distro in apt_freexian_distros

    - name: Install packages in a block as this task will fail when the sources are not correct
      block:

        - name: Update apt cache
          ansible.builtin.apt:
            update_cache: true
          check_mode: false
          changed_when: false

        - name: Packages present
          ansible.builtin.apt:
            pkg: "{{ apt_pkgs | community.general.json_query(apt_pkgs_jmespath_query) }}"
          vars:
            apt_pkgs_jmespath_query: "[?distro=='{{ ansible_facts.distribution_release }}'].pkgs|[0]"

      rescue:

        - name: Package cache update / install failed
          ansible.builtin.debug:
            msg: This failure is being ignored as the cache update and package install might require a prior update to have run.

    - name: Include apt config tasks
      ansible.builtin.include_tasks: config.yml

    - name: Update the cache when switching distros
      ansible.builtin.apt:
        update_cache: true
      when: >-
        ( apt_distro_switch is defined ) and
        ( apt_distro_switch | bool )

    - name: When switching distros updates should not be done using Ansible
      block:

        - name: Apt update cache
          ansible.builtin.apt:
            update_cache: true
          register: apt_update_cache_result
          tags:
            - molecule-idempotence-notest

        - name: Debug apt_update_cache_result
          ansible.builtin.debug:
            var: apt_update_cache_result
            verbosity: "{% if ansible_check_mode | bool or ansible_diff_mode | bool %}0{% else %}1{% endif %}"
          when: apt_update_cache_result is defined
          tags:
            - debug

        - name: Apt dist upgrade
          ansible.builtin.apt:
            upgrade: dist
          register: apt_dist_upgrade_result

        - name: Debug apt_dist_upgrade_result
          ansible.builtin.debug:
            var: apt_dist_upgrade_result
            verbosity: "{% if ansible_check_mode | bool or ansible_diff_mode | bool %}0{% else %}1{% endif %}"
          when: apt_dist_upgrade_result is defined
          tags:
            - debug

        - name: Re-read Ansible local facts  # noqa: no-handler
          ansible.builtin.setup:
            filter: ansible_local
          when: apt_dist_upgrade.changed | bool

        - name: Apt autoremove
          ansible.builtin.apt:
            autoremove: true
          when: apt_autoremove | bool
          register: apt_autoremove_result
          tags:
            - molecule-idempotence-notest

        - name: Debug apt_autoremove_result
          ansible.builtin.debug:
            var: apt_autoremove_result
            verbosity: "{% if ansible_check_mode | bool or ansible_diff_mode | bool %}0{% else %}1{% endif %}"
          when: apt_autoremove_result is defined
          tags:
            - debug
            - molecule-idempotence-notest

        - name: Apt auto clean
          ansible.builtin.apt:
            autoclean: true
          when: apt_autoclean | bool
          register: apt_autoclean_result

        - name: Debug apt_autoclean_result
          ansible.builtin.debug:
            var: apt_autoclean_result
            verbosity: "{% if ansible_check_mode | bool or ansible_diff_mode | bool %}0{% else %}1{% endif %}"
          when: apt_autoclean_result is defined
          tags:
            - debug

        - name: Apt clean
          ansible.builtin.include_tasks: apt_clean.yml
          when:
            - ansible_version.full is version('2.13', '>=')
            - apt_clean | bool

        - name: Include apticron tasks
          ansible.builtin.include_tasks: apticron.yml
          when: apt_apticron is defined

      when: >-
        ( apt_distro_switch is not defined ) or
        ( not apt_distro_switch | bool )

    - name: Include check for legacy .list file
      ansible.builtin.include_tasks: list_check.yml
      tags:
        - apt_list

  when: apt | bool
  tags:
    - apt
...
