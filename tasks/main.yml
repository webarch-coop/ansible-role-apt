# Copyright 2019-2023 Chris Croome
#
# This file is part of the Webarchitects apt Ansible role.
#
# The Webarchitects apt Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects apt Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects apt Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Skip the tasks in this role as apt is false
  ansible.builtin.debug:
    msg: "The apt variable need to be true for the tasks in this role to run."
  when: not apt | bool
  tags:
    - apt

- name: Configure apt sources list for Debian and Ubuntu
  block:

    - name: Include local facts tasks
      ansible.builtin.include_tasks: local_facts.yml
      when:
        - apt_local_facts is defined
        - apt_local_facts | bool
        - apt_local_facts_files is defined
        - apt_local_facts_files != []
      tags:
        - apt_local_facts

    - name: Python packages present for Debian
      block:

        - name: Package python3-apt present
          ansible.builtin.apt:
            pkg: python3-apt
          when: ansible_distribution_release is not regex('^jessie|stretch$')

        - name: Package python-apt present for Debian Stretch and Jessie
          ansible.builtin.apt:
            pkg:
              - apt-transport-https
              - python-apt
          when: ansible_distribution_release is regex('^jessie|stretch$')

      when: ansible_distribution == "Debian"

    - name: Print ansible_distribution_release
      ansible.builtin.debug:
        var: ansible_distribution_release
        verbosity: "{% if ansible_check_mode | bool %}0{% else %}1{% endif %}"

    - name: Print apt_distro
      ansible.builtin.debug:
        var: apt_distro
        verbosity: "{% if ansible_check_mode | bool %}0{% else %}1{% endif %}"
      when: apt_distro is defined

    - name: Fail if the checked distro version doesn't match the specified value of apt_distro
      ansible.builtin.fail:
        msg: "The distro was detected as {{ ansible_distribution_release }} but you are asking for the server to be configured for {{ apt_distro }}."
      when:
        - apt_distro is defined
        - apt_distro != ansible_distribution_release
        - not apt_distro_switch | bool

    - name: Warning and tasks for switching distros
      block:

        - name: Print a warning the the distro is being changed
          ansible.builtin.debug:
            msg: "WARNING: Updating distro from {{ ansible_distribution_release }} to {{ apt_distro }}."

        - name: Run apt-get --allow-releaseinfo-change update
          ansible.builtin.command: apt-get --allow-releaseinfo-change update
          changed_when: true

      when:
        - apt_distro_switch is defined
        - apt_distro_switch | bool

    - name: Set apt_distro if not defined
      ansible.builtin.set_fact:
        apt_distro: "{{ ansible_distribution_release }}"
      when: apt_distro is not defined

    - name: Include Debian sources.list tasks
      ansible.builtin.include_tasks: debian.yml
      when: apt_distro is regex('^jessie|stretch|buster|bullseye|bookworm$')

    - name: Include Ubuntu sources.list tasks
      ansible.builtin.include_tasks: ubuntu.yml
      when: apt_distro is regex('^xenial|bionic|focal|jammy$')

    - name: Update the cache when switching distros
      ansible.builtin.apt:
        update_cache: true
      when: >-
        ( apt_distro_switch is defined ) and
        ( apt_distro_switch | bool )

    - name: When switching distros updates should not be done using Ansible
      block:

        - name: Packages upgraded
          ansible.builtin.apt:
            autoclean: true
            autoremove: true
            upgrade: dist
            update_cache: true

        - name: Packages present
          ansible.builtin.apt:
            pkg: "{{ apt_pkgs }}"
            state: present
            update_cache: false
          when: >-
            ( ( apt_pkgs is defined ) and
            ( apt_pkgs != [] ) ) and
            ( ( ansible_local.dpkg.installed is not defined ) or
            ( apt_pkgs | ansible.builtin.difference(ansible_local.dpkg.installed) != [] ) )

        - name: Include apticron tasks
          ansible.builtin.include_tasks: apticron.yml
          when: apt_apticron is defined

        - name: Apt clean
          ansible.builtin.include_tasks: apt_clean.yml
          when: ansible_version.full is version('2.13', '>=')

      when: >-
        ( apt_distro_switch is not defined ) or
        ( not apt_distro_switch | bool )

    - name: Include check for legacy .list file
      ansible.builtin.include_tasks: list_check.yml
      tags:
        - apt_list

  when: apt | bool
  tags:
    - apt
...
