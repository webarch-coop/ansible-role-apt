# Copyright 2019-2023 Chris Croome
#
# This file is part of the Webarchitects apt Ansible role.
#
# The Webarchitects apt Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects apt Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects apt Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Repo sources tasks
  block:

    - name: "Set facts for {{ apt_distro }}"
      ansible.builtin.set_fact:
        apt_backports: "{{ apt_sources | community.general.json_query(apt_backports_jmespath_query) }}"
        apt_components: "{{ apt_sources | community.general.json_query(apt_components_jmespath_query) }}"
        apt_domain: "{{ apt_sources | community.general.json_query(apt_domain_jmespath_query) }}"
        apt_file: "{{ apt_sources | community.general.json_query(apt_file_jmespath_query) }}"
        apt_files_absent: "{{ apt_sources | community.general.json_query(apt_files_absent_jmespath_query) }}"
        apt_https: "{{ apt_sources | community.general.json_query(apt_https_jmespath_query) }}"
        apt_signed_by: "{{ apt_sources | community.general.json_query(apt_signed_by_jmespath_query) }}"
        apt_src: "{{ apt_sources | community.general.json_query(apt_src_jmespath_query) }}"
      vars:
        apt_backports_jmespath_query: "[?name=='{{ apt_distro }}'].backports|[0]"
        apt_components_jmespath_query: "[?name=='{{ apt_distro }}'].components|[]"
        apt_domain_jmespath_query: "[?name=='{{ apt_distro }}'].domain|[0]"
        apt_file_jmespath_query: "[?name=='{{ apt_distro }}'].file|[0]"
        apt_files_absent_jmespath_query: "[?name=='{{ apt_distro }}'].files_absent|[]"
        apt_https_jmespath_query: "[?name=='{{ apt_distro }}'].https|[0]"
        apt_signed_by_jmespath_query: "[?name=='{{ apt_distro }}'].signed_by|[0]"
        apt_src_jmespath_query: "[?name=='{{ apt_distro }}'].src|[0]"

    - name: "Debug apt_backports for {{ apt_distro }}"
      ansible.builtin.debug:
        var: apt_backports
        verbosity: "{% if ansible_check_mode | bool %}0{% else %}1{% endif %}"

    - name: "Debug apt_components for {{ apt_distro }}"
      ansible.builtin.debug:
        var: apt_components
        verbosity: "{% if ansible_check_mode | bool %}0{% else %}1{% endif %}"

    - name: "Debug apt_domain for {{ apt_distro }}"
      ansible.builtin.debug:
        var: apt_domain
        verbosity: "{% if ansible_check_mode | bool %}0{% else %}1{% endif %}"

    - name: "Debug apt_file for {{ apt_distro }}"
      ansible.builtin.debug:
        var: apt_file
        verbosity: "{% if ansible_check_mode | bool %}0{% else %}1{% endif %}"

    - name: "Debug apt_files_absent for {{ apt_distro }}"
      ansible.builtin.debug:
        var: apt_files_absent
        verbosity: "{% if ansible_check_mode | bool %}0{% else %}1{% endif %}"

    - name: "Debug apt_https for {{ apt_distro }}"
      ansible.builtin.debug:
        var: apt_https
        verbosity: "{% if ansible_check_mode | bool %}0{% else %}1{% endif %}"

    - name: "Debug apt_signed_by for {{ apt_distro }}"
      ansible.builtin.debug:
        var: apt_signed_by
        verbosity: "{% if ansible_check_mode | bool %}0{% else %}1{% endif %}"

    - name: "Debug apt_src for {{ apt_distro }}"
      ansible.builtin.debug:
        var: apt_src
        verbosity: "{% if ansible_check_mode | bool %}0{% else %}1{% endif %}"

    - name: Only .list and .sources files are supported
      ansible.builtin.assert:
        that: >-
          ( apt_file == "/etc/apt/sources.list.d/debian.sources" ) or
          ( apt_file == "/etc/apt/sources.list.d/ubuntu.sources" ) or
          ( apt_file == "/etc/apt/sources.list" )
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"

    - name: Check that the signed-by file exists
      ansible.builtin.stat:
        path: "{{ apt_signed_by }}"
      register: apt_signed_by_path

    - name: The Signed-By GPG public keys ring needs to exist
      ansible.builtin.assert:
        that:
          - apt_signed_by_path.stat.exists | bool
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"

    - name: "Directory /etc/apt/sources.list.d present for {{ apt_distro }}"
      ansible.builtin.file:
        path: /etc/apt/sources.list.d
        state: directory
        mode: "0755"
        owner: root
        group: root

    - name: "Sources list file in place {{ apt_file }}"
      ansible.builtin.template:
        src: "{{ ansible_distribution | lower }}.list.j2"
        dest: /etc/apt/sources.list
        mode: "0644"
        owner: root
        group: root
        backup: true
      when: apt_file == "/etc/apt/sources.list"

    - name: "Sources file in place {{ apt_file }}"
      ansible.builtin.template:
        src: sources.j2
        dest: "{{ apt_file }}"
        mode: "0644"
        owner: root
        group: root
        backup: true
      vars:
        apt_file_dest: "/etc/apt/sources.list.d/{{ ansible_distribution | lower }}.sources"
      when: apt_file == apt_file_dest

    - name: Include files absent tasks
      ansible.builtin.include_tasks: file_absent.yml
      loop: "{{ apt_files_absent }}"
      loop_control:
        loop_var: apt_file_absent
        label: "{{ apt_file_absent | basename }}"
      when:
        - apt_files_absent is defined
        - apt_files_absent != []

    - name: "File /etc/apt.conf in place for {{ apt_distro }}"
      ansible.builtin.template:
        src: templates/apt.conf.j2
        dest: /etc/apt.conf
        mode: "0644"
        owner: root
        group: root
        backup: true

  tags:
    - apt
...
